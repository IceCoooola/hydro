---
source: hydroflow_plus_test/src/networked.rs
expression: builder.build().ir()
---
[
    ForEach {
        f: { use crate :: __staged :: networked :: * ; | v : Bytes | { println ! ("node one received: {:?}" , std :: str :: from_utf8 (& v) . unwrap ()) ; } },
        input: Network {
            to_location: 1,
            serialize_pipeline: None,
            sink_expr: null,
            source_expr: null,
            deserialize_pipeline: Some(
                Operator(
                    Operator {
                        path: "map",
                        args: [
                            "| b | b . unwrap () . freeze ()",
                        ],
                    },
                ),
            ),
            input: Map {
                f: | b | b . unwrap () . freeze (),
                input: Source {
                    source: Stream(
                        null,
                    ),
                    location_id: 0,
                },
            },
        },
    },
    ForEach {
        f: { use crate :: __staged :: networked :: * ; | v : Bytes | { println ! ("cluster received: {:?}" , std :: str :: from_utf8 (& v) . unwrap ()) ; } },
        input: Map {
            f: | b | b . unwrap () . freeze (),
            input: Source {
                source: Stream(
                    null,
                ),
                location_id: 2,
            },
        },
    },
]
