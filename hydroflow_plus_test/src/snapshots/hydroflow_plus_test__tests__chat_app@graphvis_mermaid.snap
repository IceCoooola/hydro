---
source: hydroflow_plus_test/src/lib.rs
expression: "chat_server.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"<div style=text-align:center>(1v1)</div> <code>source_stream({<br>    use crate::__staged::*;<br>    let users_stream = users_stream;<br>    users_stream<br>})</code>"/]:::pullClass
2v1[\"(2v1) <code>tee()</code>"/]:::pullClass
3v1[\"(3v1) <code>persist()</code>"/]:::pullClass
4v1[\"(4v1) <code>tee()</code>"/]:::pullClass
5v1[\"<div style=text-align:center>(5v1)</div> <code>source_stream({<br>    use crate::__staged::*;<br>    let messages = messages;<br>    messages<br>})</code>"/]:::pullClass
6v1[\"(6v1) <code>tee()</code>"/]:::pullClass
7v1[\"(7v1) <code>cross_join::&lt;'tick, 'tick&gt;()</code>"/]:::pullClass
8v1[\"(8v1) <code>tee()</code>"/]:::pullClass
9v1[/"<div style=text-align:center>(9v1)</div> <code>for_each({<br>    use crate::__staged::*;<br>    let output = output;<br>    |t| {<br>        output.send(t).unwrap();<br>    }<br>})</code>"\]:::pushClass
1v1-->2v1
3v1-->4v1
2v1-->3v1
5v1-->6v1
7v1-->8v1
4v1-->|0|7v1
6v1-->|1|7v1
8v1-->9v1
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
    3v1
    4v1
    5v1
    6v1
    7v1
    8v1
    9v1
    subgraph sg_1v1_var_stream_0 ["var <tt>stream_0</tt>"]
        1v1
        2v1
    end
    subgraph sg_1v1_var_stream_1 ["var <tt>stream_1</tt>"]
        3v1
        4v1
    end
    subgraph sg_1v1_var_stream_2 ["var <tt>stream_2</tt>"]
        5v1
        6v1
    end
    subgraph sg_1v1_var_stream_3 ["var <tt>stream_3</tt>"]
        7v1
        8v1
    end
    subgraph sg_1v1_var_stream_4 ["var <tt>stream_4</tt>"]
        9v1
    end
end

