---
source: hydroflow_plus_test/src/lib.rs
expression: "reachability.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_stream(roots)</code>"/]:::pullClass
2v1[\"(2v1) <code>union()</code>"/]:::pullClass
3v1[/"(3v1) <code>tee()</code>"\]:::pushClass
4v1[/"<div style=text-align:center>(4v1)</div> <code>map({<br>    use crate::__staged::*;<br>    |r| (r, ())<br>})</code>"\]:::pushClass
5v1[\"(5v1) <code>source_stream(edges)</code>"/]:::pullClass
6v1[\"(6v1) <code>join::&lt;'tick, 'tick&gt;()</code>"/]:::pullClass
7v1[\"<div style=text-align:center>(7v1)</div> <code>map({<br>    use crate::__staged::*;<br>    |(_from, (_, to))| to<br>})</code>"/]:::pullClass
8v1[/"(8v1) <code>unique::&lt;'tick&gt;()</code>"\]:::pushClass
9v1[/"<div style=text-align:center>(9v1)</div> <code>for_each({<br>    use crate::__staged::*;<br>    let reached_out = reached_out;<br>    |v| {<br>        reached_out.send(v).unwrap();<br>    }<br>})</code>"\]:::pushClass
10v1["(10v1) <code>handoff</code>"]:::otherClass
1v1-->|0|2v1
7v1-->|1|2v1
2v1-->3v1
3v1-->4v1
4v1-->10v1
5v1-->|1|6v1
6v1-->7v1
3v1-->8v1
8v1-->9v1
10v1-->|0|6v1
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    10v1
    1v1
    5v1
    6v1
    7v1
    2v1
    3v1
    4v1
    8v1
    9v1
    subgraph sg_1v1_var_stream_0 ["var <tt>stream_0</tt>"]
        1v1
    end
    subgraph sg_1v1_var_stream_1 ["var <tt>stream_1</tt>"]
        2v1
    end
    subgraph sg_1v1_var_stream_2 ["var <tt>stream_2</tt>"]
        3v1
    end
    subgraph sg_1v1_var_stream_3 ["var <tt>stream_3</tt>"]
        4v1
    end
    subgraph sg_1v1_var_stream_4 ["var <tt>stream_4</tt>"]
        5v1
    end
    subgraph sg_1v1_var_stream_5 ["var <tt>stream_5</tt>"]
        6v1
    end
    subgraph sg_1v1_var_stream_6 ["var <tt>stream_6</tt>"]
        7v1
    end
    subgraph sg_1v1_var_stream_7 ["var <tt>stream_7</tt>"]
        8v1
    end
end

